tsqared <- function(x,y,f){
"
Hotellings Tsquared function has 3 input parameters
1. X = dataset
2. Y = mean vector to test if exists as a mean vector in the dataset
3. F = signifgance level for our F-statistics
This function then returns:
1. Results of the actual Hotellings Tsquared test
2. F-statistic
"
n <- nrow(x)
xmean <- colMeans(x)
xcov <- cov(x)
xcovin <- solve(xcov)
xyvar <- xmean - y
p1 <- xyvar %*% xcovin
result <- round(p1%*%(n*xyvar),3)
fstat <- qf(f, df1 = ncol(x), df2 = nrow(x)-ncol(x))
p_value <- pf(fstat, df1 = ncol(x), df2 = nrow(x) - ncol(x), lower.tail = FALSE)
if(p_value < 0.05){
print("We REJECT the Null Hypothesis that y is a possible mean vector in x")
}else{
print("We ACCEPT the Null Hypothesis and y is a possible mean vector in x")
}
return(c(result, fstat, p_value))
}
## Descriptive stats for each dataset
a = descriptive(nms[1:5])
tsqared(ms, colMeans(nms), 0.95, 0.05)
tsqared <- function(x,y,f,s){
"
Hotellings Tsquared function has 3 input parameters
1. X = dataset
2. Y = mean vector to test if exists as a mean vector in the dataset
3. F = signifgance level for our F-statistics
This function then returns:
1. Results of the actual Hotellings Tsquared test
2. F-statistic
"
n <- nrow(x)
xmean <- colMeans(x)
xcov <- cov(x)
xcovin <- solve(xcov)
xyvar <- xmean - y
p1 <- xyvar %*% xcovin
result <- round(p1%*%(n*xyvar),3)
fstat <- qf(f, df1 = ncol(x), df2 = nrow(x)-ncol(x))
p_value <- pf(fstat, df1 = ncol(x), df2 = nrow(x) - ncol(x), lower.tail = FALSE)
if(p_value < 0.05){
print("We REJECT the Null Hypothesis that y is a possible mean vector in x")
}else{
print("We ACCEPT the Null Hypothesis and y is a possible mean vector in x")
}
return(c(result, fstat, p_value))
}
tsqared(ms, colMeans(nms), 0.95, 0.05)
library(st514)
library(tidyverse)
library(ggplot2)
library(GGally)
library(corrplot)
library(ggcorrplot)
library(ggpubr)
library(lattice)
data("T1-6")
#Renaming
colnames(tbl) <- c("Age", "V2", "V3", "V4", "V5","target")
tbl$target <- as.factor(tbl$target)
# Non-multiple-sclerosis (NMS) group data
nms <- subset(tbl, target == 0)
# Multiple-sclerosis (MS) group data
ms <- subset(tbl, target == 1)
tsqared <- function(x,y,f,s){
"
Hotellings Tsquared function has 3 input parameters
1. X = dataset
2. Y = mean vector to test if exists as a mean vector in the dataset
3. F = signifgance level for our F-statistics
This function then returns:
1. Results of the actual Hotellings Tsquared test
2. F-statistic
"
n <- nrow(x)
xmean <- colMeans(x)
xcov <- cov(x)
xcovin <- solve(xcov)
xyvar <- xmean - y
p1 <- xyvar %*% xcovin
result <- round(p1%*%(n*xyvar),3)
fstat <- qf(f, df1 = ncol(x), df2 = nrow(x)-ncol(x))
p_value <- pf(fstat, df1 = ncol(x), df2 = nrow(x) - ncol(x), lower.tail = FALSE)
if(p_value < 0.05){
print("We REJECT the Null Hypothesis that y is a possible mean vector in x")
}else{
print("We ACCEPT the Null Hypothesis and y is a possible mean vector in x")
}
return(c(result, fstat, p_value))
}
"
Calculating the p-values of the F-statistics we get from the
Tsquared function that is here down below.
"
tsqared(ms, colMeans(nms), 0.95, 0.05)
tsqared(ms[1:5], colMeans(nms), 0.95, 0.05)
tsqared(ms[1:5], colMeans(nms[1:5]), 0.95, 0.05)
tsqared(ms[1:5], colMeans(nms[1:5]), 0.05, 0.05)
tsqared <- function(x,y,f){
"
Hotellings Tsquared function has 3 input parameters
1. X = dataset
2. Y = mean vector to test if exists as a mean vector in the dataset
3. F = signifgance level for our F-statistics
This function then returns:
1. Results of the actual Hotellings Tsquared test
2. F-statistic
"
n <- nrow(x)
xmean <- colMeans(x)
xcov <- cov(x)
xcovin <- solve(xcov)
xyvar <- xmean - y
p1 <- xyvar %*% xcovin
result <- round(p1%*%(n*xyvar),3)
fstat <- qf(f, df1 = ncol(x), df2 = nrow(x)-ncol(x))
p_value <- pf(fstat, df1 = ncol(x), df2 = nrow(x) - ncol(x), lower.tail = FALSE)
if(p_value < 0.05){
print("We REJECT the Null Hypothesis that y is a possible mean vector in x")
}else{
print("We ACCEPT the Null Hypothesis and y is a possible mean vector in x")
}
return(c(result, fstat, p_value))
}
tsqared(ms[1:5], colMeans(nms[1:5]), 0.05, 0.05)
